<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>翻译 on Hugo ʕ•ᴥ•ʔ Bear Blog</title>
    <link>http://localhost:1313/blog/%E7%BF%BB%E8%AF%91/</link>
    <description>Recent content in 翻译 on Hugo ʕ•ᴥ•ʔ Bear Blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2020, Jane Doe.</copyright>
    <lastBuildDate>Fri, 05 Nov 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/%E7%BF%BB%E8%AF%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>揭秘箭头函数</title>
      <link>http://localhost:1313/blog/82.html/</link>
      <pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/82.html/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;英文地址：https://javascript.plainenglish.io/demystifying-javascript-arrow-functions-7b2a0908a2b3&lt;br&gt;&#xA;通过掘金翻译计划活动进行翻译&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://imgurl.zishu.me/images/old/2021/11/05/b48745e783a796580ccd10fa6b845c71.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;箭头函数是函数表达式的替代方法，但在语法上有所不同，不能在所有情况下使用。如果您还没有阅读 JavaScript 中的函数表达式，我建议您在继续阅读之前先阅读&lt;a href=&#34;https://themallu.dev/demystifying-function-expressions&#34;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;现在，让我们试着从语法、执行、作用域和提升以及代码示例方面来理解箭头函数。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-语法&#34;&gt;1. 语法&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; arrowFunctionSyntax &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; () =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;  console.log(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;Hi, I am an arrow function&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span&gt;arrowFunctionSyntax();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上面的代码示例中，我们可以看到箭头函数类似于函数表达式，因为它们被赋值为变量。主要区别在于函数的编写方式。以下是我们可以根据其语法从上述代码中得出的观察结果：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;它不包含 &lt;strong&gt;function&lt;/strong&gt; 关键字。&lt;/li&gt;&#xA;&lt;li&gt;它没有 &lt;strong&gt;函数名&lt;/strong&gt; ，这意味着这些是匿名函数。&lt;/li&gt;&#xA;&lt;li&gt;引入了箭头 &lt;code&gt;=&amp;gt;&lt;/code&gt; 符号。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; arrowFunctionWithOneParam &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (number) =&amp;gt; number &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;const&lt;/span&gt; arrowFunctionWithMultipleParams &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (numberOne, numberTwo) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;let&lt;/span&gt; sum &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; numberOne &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; numberTwo;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; sum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;&lt;span&gt;console.log(arrowFunctionWithOneParam(&lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;&lt;span&gt;console.log(arrowFunctionWithMultipleParams(&lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;6&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果我们同时观察 &lt;code&gt;arrowFunctionWithOneParam&lt;/code&gt; 和 &lt;code&gt;arrowFunctionWithMultipleParams&lt;/code&gt;，我们可以发现三者的不同&amp;mdash;括号 &lt;code&gt;()&lt;/code&gt;、块 &lt;code&gt;{}&lt;/code&gt; 和 &lt;code&gt;return&lt;/code&gt; 关键字的使用。根据箭头函数的语法，如果函数只接受一个参数，可以忽略括号&lt;code&gt;()&lt;/code&gt;。如果函数只包含一条语句，则可以忽略块&lt;code&gt;{}&lt;/code&gt;，最后其实也可以忽略&lt;code&gt;return&lt;/code&gt; ，如果函数只包含一个语句。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

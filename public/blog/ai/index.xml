<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on Hugo ʕ•ᴥ•ʔ Bear Blog</title>
    <link>http://localhost:1313/blog/ai/</link>
    <description>Recent content in AI on Hugo ʕ•ᴥ•ʔ Bear Blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright © 2020, Jane Doe.</copyright>
    <lastBuildDate>Sat, 19 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我和 AI 的这几年</title>
      <link>http://localhost:1313/blog/257.html/</link>
      <pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/257.html/</guid>
      <description>&lt;p&gt;这几年最火的事情莫过于 AI，也有可能是幸存者偏差的原因，当然这暂表不提，只谈谈我和 AI 相处的这几年，我是如何利用这个工具，提高我的工作效率，以及在生活，兴趣爱好等层面和谐融入&lt;/p&gt;&#xA;&lt;p&gt;2022 年底 的时候，我初步接触 gpt 3.5，给我带了极大的震撼，我没想到，AI 已经进化到如此的地步，可以智能对话，处理代码逻辑，进行文字撰写工作。以现在的目光看来它很傻，但是在当时那个环境下，给我的工作和学习带来了极大的帮助。&lt;/p&gt;&#xA;&lt;p&gt;现在翻阅和 gpt 的历史聊天记录，可以看出我当时对它还是抱有很大的热枕，可以帮我总结繁杂的 json 数据并重组数据结构。还可以通过一些特殊的 Prompt 让它解锁图片生成，虽然很生成的图像很拙劣，但我玩的很开心。&lt;/p&gt;&#xA;&lt;p&gt;后来随着这个领域发展的突飞猛进，Claude 横空出世，开始在上下文限制上领先 gpt，但是 OpenAI 毕竟占据先发优势，仍然是我主用的模型。可随着时间的推移，Claude 开始崭露头角，在代码领域展现出断层式的领先，尤其是在前端代码生成方面，非常符合我的需求，所以后来我的使用就变成了 Claude 写代码，gpt 日常使用。&lt;/p&gt;&#xA;&lt;p&gt;可以给我生成一些文档，比如开发某个项目，要写开发文档，说明书之类的，程序员最厌恶的两件事情。一是让我写文档，二是别人不写文档。而 AI 恰好可以完美处理这个问题，虽然刚开始比较笨拙，但在我不停的投喂资料下，也是可以逐渐生成可上生产环境的文档，当然了最后还是需要我来 review code。&lt;/p&gt;&#xA;&lt;p&gt;后来谷歌也陆续推出了什么 Bard 模型，现在改名叫 Gemini，质量也是非常不错，不过我用的比较少。通过前面的介绍也大概知道，AI 领域前期一直是国外遥遥领先，虽然我也希望国产 AI 可以崛起。&lt;/p&gt;&#xA;&lt;p&gt;但是在 2024 年年末的时候，DeepSeek 横空出世，在 AI 圈掀起了轩然大波，当时深度求索推出两款模型一个是 &lt;code&gt;deepseek-chat&lt;/code&gt; 也就是现在的 &lt;code&gt;deepseek-v3&lt;/code&gt;，还有一个就是现在的深度思考模式 &lt;code&gt;deepseek-reasoner&lt;/code&gt;。也是带起了大模型引入思考的风潮。&lt;/p&gt;&#xA;&lt;p&gt;记得在还没过年之前，DeepSeek 小火了一段时间，我也是频繁使用，代码质量、文本质量完全可以称得上一线水平，官网速度也很快，应该是因为人流量还未彻底爆发，深度思考模式基本都是秒出。后来代码一经开源，直接引起热潮，官网流量爆炸，至今任伟恢复到巅峰时期，不过这也说明了 deeseek 的全民热潮。&lt;/p&gt;&#xA;&lt;p&gt;后面各家大厂也都部署了 deepseek 全血版，我比较推崇火山方舟和阿里云百炼旗下的 deepseek 模型，质量和速度也都在前列，我 90% 在使用火山方舟的。&lt;/p&gt;&#xA;&lt;p&gt;其实阿里旗下的 QWen 模型也一直发展的风生水起，不过我是个人用习惯了前面说的那些，所以 QWen 也很少用，不过非常推荐大家使用。&lt;/p&gt;&#xA;&lt;p&gt;所以我目前对 AI 模型的使用如下，DeepSeek + GPT 处理日常文字工作，图像生成，以及繁琐的数据重组等，Claude 负责处理逻辑复杂的代码开发，然后掺杂着 Gemini 以及其他新兴模型作为测试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cherry Studio 接入高德地图 MCP 示例</title>
      <link>http://localhost:1313/blog/255.html/</link>
      <pubDate>Wed, 02 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/255.html/</guid>
      <description>&lt;p&gt;本教程使用环境 Cherry Studio 1.1.17.&lt;/p&gt;&#xA;&lt;p&gt;最近 Cherry Studio 也接入了 MCP 服务器，闲着无聊准备尝试一番，就拿最简单的高德地图来做演示，刚好最近高德也支持了 MCP 服务。&lt;/p&gt;&#xA;&lt;p&gt;需要申请高德开发者账号，这个就不赘述了。在高德开发者控制台找到 &lt;code&gt;应用管理&amp;gt;我的应用&lt;/code&gt;，点击&lt;code&gt;创建新应用&lt;/code&gt;，类型名称随便填一下，绑定服务要选择 &lt;code&gt;Web服务&lt;/code&gt;，然后不要限制 IP，最后会生成一个 key。&lt;/p&gt;&#xA;&lt;h3 id=&#34;配置-cherry-studio-的-mcp-服务器&#34;&gt;配置 Cherry Studio 的 MCP 服务器&lt;/h3&gt;&#xA;&lt;p&gt;拿到高德地图的 key 后，在 Cherry Studio 的 MCP 服务器设置填入，有两种方法。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;方法一：直接导入配置（推荐）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在右上角 &lt;code&gt;编辑 MCP 配置&lt;/code&gt; 中直接将下面的配置复制进去，改一下 &lt;code&gt;AMAP_MAPS_API_KEY&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span&gt;  &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;mcpServers&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span&gt;    &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;@amap/amap-maps&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span&gt;      &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;@amap/amap-maps&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span&gt;      &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;isActive&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span&gt;      &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;npx&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span&gt;      &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;-y&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;@amap/amap-maps-mcp-server&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span&gt;      ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span&gt;      &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span&gt;        &lt;span style=&#34;color:#062873;font-weight:bold&#34;&gt;&amp;#34;AMAP_MAPS_API_KEY&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;xxxxxxxxxxx&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;方法二：手动填写配置&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在 Cherry Studio 中打开 MCP 服务器设置界面，按以下参数填写：&lt;/p&gt;</description>
    </item>
    <item>
      <title>通过 AI 实现自动生成 SEO TDK</title>
      <link>http://localhost:1313/blog/253.html/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/253.html/</guid>
      <description>&lt;p&gt;感谢博友的文章，&lt;a href=&#34;https://blog.ops-coffee.cn/s/ai-powered-seo-automation-for-tdk-generation.html&#34;&gt;《AI 实践｜零成本生成 SEO 友好的 TDK 落地方案》&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;昨天晚上刷到一篇文章，通过 AI 自动化生成网站 SEO 的 TDK，他这个方法有两点比较繁琐的地方。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;文章内容需要手动替换到脚本中&lt;/li&gt;&#xA;&lt;li&gt;生成的 TDK 需要手动加入数据库&lt;/li&gt;&#xA;&lt;/ol&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;我针对第一点略微做了一些调整，可以直接查找当前脚本目录下的文件夹，在文件的 62 行，稍后我会把源码贴在文章最下方。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/dlzmoe/blog/blob/main/aitdk.py&#34;&gt;https://github.com/dlzmoe/blog/blob/main/aitdk.py&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# aitdk.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;main&lt;/span&gt;(file_name, api_key, api_url, model, debug&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;False&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;    current_dir &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;dirname(os&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;abspath(__file__))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span&gt;    file_path &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;join(current_dir, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;, file_name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的目录 &lt;code&gt;/content/blog&lt;/code&gt; 可以自由修改，换成你本地的格式。&lt;/p&gt;&#xA;&lt;p&gt;使用方法也很简单，在 &lt;code&gt;aitdk.py&lt;/code&gt; 同级目录下新建一个 &lt;code&gt;.env&lt;/code&gt; 环境变量文件，内容如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#bb60d5&#34;&gt;OPENAI_API_KEY&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;sk-xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#bb60d5&#34;&gt;OPENAI_API_URL&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;https://api.openai.com/v1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span&gt;&lt;span style=&#34;color:#bb60d5&#34;&gt;OPENAI_API_MODEL&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;gpt-4o-mini&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后安装一下依赖。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span&gt;pip install markdown beautifulsoup4 &lt;span style=&#34;color:#bb60d5&#34;&gt;openai&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;0.28 python-dotenv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行命令，&lt;code&gt;xxx.md&lt;/code&gt; 就是你的文件全名。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on 子舒的博客</title>
    <link>https://zishu.me/tags/json/</link>
    <description>Recent content in Json on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zishu.me/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python 通过 json 生成小文件</title>
      <link>https://zishu.me/blog/212.html/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/212.html/</guid>
      <description>记录一个方法，pyhton 通过 json 文件，在同级目录下生成对应格式的小文本。 import json def generate_files_from_json(json_file): with open(json_file, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: data = json.load(f) for item in data: for key, value in item.items(): if isinstance(value, list): for sub_item in value: for sub_key, sub_value in sub_item.items(): if isinstance(sub_value, dict) and &amp;#39;list&amp;#39; in sub_value: for sub_sub_item in sub_value[&amp;#39;list&amp;#39;]: if &amp;#39;id&amp;#39; in sub_sub_item and &amp;#39;css&amp;#39; in sub_sub_item: id_value = sub_sub_item[&amp;#39;id&amp;#39;] css_value = sub_sub_item[&amp;#39;css&amp;#39;] create_file(id_value, css_value) def create_file(file_name, content): file_path = f&amp;#34;{file_name}.css&amp;#34; with open(file_path, &amp;#39;w&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as file: file.write(content) print(f&amp;#34;File &amp;#39;{file_path}&amp;#39; created successfully.&amp;#34;) if __name__ == &amp;#34;__main__&amp;#34;: json_file_path = &amp;#39;your_json_file.json&amp;#39; generate_files_from_json(json_file_path) import json def generate_files_from_json(json_file): with open(json_file, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: data = json.load(f) for item in data: for key, value in item.items(): if isinstance(value, dict) and &amp;#39;list&amp;#39; in value: for sub_item in value[&amp;#39;list&amp;#39;]: if &amp;#39;id&amp;#39; in sub_item and &amp;#39;css&amp;#39; in sub_item: id_value = sub_item[&amp;#39;id&amp;#39;] css_value = sub_item[&amp;#39;css&amp;#39;] create_file(id_value, css_value) def create_file(file_name, content): file_path = f&amp;#34;{file_name}.css&amp;#34; with open(file_path, &amp;#39;w&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as file: file.write(content) print(f&amp;#34;File &amp;#39;{file_path}&amp;#39; created successfully.&amp;#34;) if __name__ == &amp;#34;__main__&amp;#34;: json_file_path = &amp;#39;your_json_file.json&amp;#39; generate_files_from_json(json_file_path)</description>
    </item>
  </channel>
</rss>

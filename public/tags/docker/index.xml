<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 子舒的博客</title>
    <link>https://zishu.me/tags/docker/</link>
    <description>Recent content in Docker on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zishu.me/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>wewe-rss 项目部署</title>
      <link>https://zishu.me/blog/219.html/</link>
      <pubDate>Thu, 29 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/219.html/</guid>
      <description>Github 仓库：https://github.com/cooderl/wewe-rss/ 免费、开源的微信公众号订阅方式，支持私有化部署、微信公众号 RSS 生成，部署问题也可以提 issues。 在线感谢 @潇潇 ！！ 部署的一些流程，仅供参考。 在服务器 /data/ 目录下新建 rss 文件夹，新建 docker-compose.yml 文件。 xx.xx.xx.xx 是你服务器的 ip。 # /data/rss/docker-compose.yml version: &amp;#39;3.9&amp;#39; services: server: image: cooderl/wewe-rss-server:latest ports: - 4000:4000 depends_on: db: condition: service_healthy environment: # 数据库连接地址 - DATABASE_URL=mysql://root:123456@db:3306/wewe-rss?schema=public&amp;amp;connect_timeout=30&amp;amp;pool_timeout=30&amp;amp;socket_timeout=30 # 服务接口请求授权码 - AUTH_CODE=123567 # 自动提取全文内容 - FEED_MODE=fulltext # 服务接口请求限制，每分钟请求次数 - MAX_REQUEST_PER_MINUTE=60 # 外网访问时，需设置为服务器的公网 IP 或者域名地址 - SERVER_ORIGIN_URL=http://xx.xx.xx.xx:4000/ web: image: cooderl/wewe-rss-web:latest ports: - 3000:3000 environment: # 同 SERVER_ORIGIN_URL - NEXT_PUBLIC_SERVER_ORIGIN_URL=http://xx.xx.xx.xx:4000/ networks: wewe-rss: 运行 docker 指令 docker-compose up -d 在服务器运营商处给服务器防火墙放行端口 3000, 3307, 4000。</description>
    </item>
    <item>
      <title>docker 部署思源笔记</title>
      <link>https://zishu.me/blog/124.html/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/124.html/</guid>
      <description>文章废弃 部署 docker run --name siyuan -itd -p 6806:6806 -v /opt/my_siyuan_path:/opt/siyuan --restart always b3log/siyuan 备份 sudo su # 查看容器列表 docker ps -a # 制作备份 docker commit -p 7409ce6aae7b siyuan_backup # 其中 403e6db0c 是容器id, jenkins_backup是备份名称 # 查看备份是否成功 docker images # 将镜像制作成文件 docker save -o [filename] [image] docker save -o siyuan_backup.tar siyuan_backup ls # 在 /home/ubuntu/ 中可以看到制作后的压缩包</description>
    </item>
  </channel>
</rss>

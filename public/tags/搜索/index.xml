<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>搜索 on 子舒的博客</title>
    <link>https://zishu.me/tags/%E6%90%9C%E7%B4%A2/</link>
    <description>Recent content in 搜索 on 子舒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Mar 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://zishu.me/tags/%E6%90%9C%E7%B4%A2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>增加了站内搜索功能</title>
      <link>https://zishu.me/blog/110.html/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://zishu.me/blog/110.html/</guid>
      <description>如题，我花了一个多小时，参照 nuxt 文档，把搜索功能给加上了，记录一下相关代码。&#xA;可以选择放在 components/&amp;lt;Search /&amp;gt; 里面，然后引入到 head 模板，也可以单独创建一个页面，我选择的是后者。&#xA;新建一个页面模板 /pages/search.vue 。&#xA;&amp;lt;template&amp;gt; &amp;lt;div&amp;gt; &amp;lt;HeaderMe /&amp;gt; &amp;lt;div class=&amp;#34;wrapper&amp;#34;&amp;gt; &amp;lt;PageSidebar /&amp;gt; &amp;lt;div class=&amp;#34;archive&amp;#34;&amp;gt; &amp;lt;h2&amp;gt;{{ article.attributes.title }}&amp;lt;/h2&amp;gt; &amp;lt;div class=&amp;#34;article-content markdown-body&amp;#34; v-html=&amp;#34;article.html&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;search&amp;#34;&amp;gt; &amp;lt;input v-model=&amp;#34;searchQuery&amp;#34; type=&amp;#34;search&amp;#34; autocomplete=&amp;#34;off&amp;#34; placeholder=&amp;#34;文章关键词&amp;#34; /&amp;gt; &amp;lt;ul v-if=&amp;#34;articles.length&amp;#34;&amp;gt; &amp;lt;li v-for=&amp;#34;article of articles&amp;#34; :key=&amp;#34;article.slug&amp;#34;&amp;gt; &amp;lt;NuxtLink :to=&amp;#34;article.path+&amp;#39;/&amp;#39;&amp;#34;&amp;gt;{{ article.title }}&amp;lt;/NuxtLink&amp;gt; &amp;lt;!-- 在url地址后加一个/，配置全站的url格式，防止错乱 --&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; import HeaderMe from &amp;#34;@/components/HeaderMe&amp;#34;; import PageSidebar from &amp;#39;@/components/PageSidebar&amp;#39;; export default { components: { HeaderMe, PageSidebar }, data () { return { searchQuery: &amp;#39;&amp;#39;, articles: [] } }, async asyncData () { // 调用 search.md 内的数据 const article = await import(`~/content/search.md`); return { article }; }, watch: { async searchQuery (searchQuery) { if (!searchQuery) { this.articles = [] return } this.articles = await this.$content(&amp;#39;posts&amp;#39;) // posts 是文章所在的文件夹的名称 .limit(10) .search(searchQuery) .fetch() } } } &amp;lt;/script&amp;gt; 关于样式的编写不怎么重要我就放下面了。&#xA;css 代码 .wrapper { min-height: 300px; .archive { padding: 25px 2% 15px; .article-content { font-size: inherit; line-height: 1.8; color: inherit; margin-top: 20px; } .search { margin-top: 16px; input { width: 100%; background-color: #edf2f7; color: #2f495e; outline: none; border: none; border-radius: 30px; padding: 4px 20px; box-sizing: border-box; transition: all 0.1s linear; &amp;amp;:focus { box-shadow: 3px 2px 10px rgb(0 0 0 / 20%); } } ul { margin-top: 6px; list-style: none; li { a { display: block; padding: 6px 14px; line-height: 1.6; transition: all 0.2s linear; &amp;amp;:hover { background: #edf2f7; } } } } } } } @media (max-width: 520px) { .wrapper { .archive { .search { ul { li { a { border-bottom: 1px solid #ddd; } } } } } } } </description>
    </item>
  </channel>
</rss>
